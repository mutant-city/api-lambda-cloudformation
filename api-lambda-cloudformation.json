{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Api gateway with lambda integration.",
  "Parameters": {
    "endpointPath": {
      "Description": "The path of the endpoint.",
      "Type": "String",
      "Default": "test"
    }
  },
  "Outputs": {
    "endpointUrl": {
      "Description": "The full url of the newly created endpoint.",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            { "Ref": "RestApiLambdaIntegration" },
            ".execute-api.",
            { "Ref": "AWS::Region" },
            ".amazonaws.com",
            "/v1/",
            { "Ref": "endpointPath" }
          ]
        ]
      }
    }
  },
  "Resources": {
    "LambdaRepeater": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              [
                "exports.handler = async (event) => {",
                "const response = {",
                "statusCode: 200,",
                "body: JSON.stringify(event)",
                "};",
                "return response;",
                "};"
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs8.10",
        "Timeout": "30",
        "Role": {
          "Fn::GetAtt": ["LambdaExecutionRole", "Arn"]
        }
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["lambda.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "lambdalogtocloudwatch",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          }
        ]
      }
    },
    "RestApiLambdaIntegration": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "Api Lambda Integration",
        "Description": "Api Lambda Integration"
      }
    },
    "ResourceLambdaIntegration": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApiLambdaIntegration"
        },
        "ParentId": {
          "Fn::GetAtt": ["RestApiLambdaIntegration", "RootResourceId"]
        },
        "PathPart": { "Ref": "endpointPath" }
      }
    },
    "LambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Fn::GetAtt": ["LambdaRepeater", "Arn"]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RestApiLambdaIntegration"
              },
              "/*/*/*"
            ]
          ]
        }
      }
    },
    "RestApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApiLambdaIntegration"
        },
        "StageName": "v1"
      },
      "DependsOn": ["MethodLambdaIntegration"]
    },
    "MethodLambdaIntegration": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApiLambdaIntegration"
        },
        "ResourceId": {
          "Ref": "ResourceLambdaIntegration"
        },
        "HttpMethod": "ANY",
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": ["LambdaRepeater", "Arn"]
                },
                "/invocations"
              ]
            ]
          },
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200,
              "ResponseTemplates": {
                "application/json": "{\"status\":\"successful\"}"
              }
            }
          ]
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          }
        ]
      }
    }
  }
}
